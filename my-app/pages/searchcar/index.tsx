import Head from 'next/head';
import styles from '@/styles/searchcar.module.css';
import { Row, Col } from 'react-bootstrap';
import React, { useState } from 'react';
import Dropdown from 'react-bootstrap/Dropdown';
import Form from 'react-bootstrap/Form';
import { BiSearchAlt } from 'react-icons/bi';
import { useInfiniteQuery } from 'react-query';
import InfiniteScroll from 'react-infinite-scroll-component';

import DatePicker from 'react-datepicker';
import 'react-datepicker/dist/react-datepicker.css';

// The forwardRef is important!!
// Dropdown needs access to the DOM node in order to position the Menu
const CustomToggle = React.forwardRef(({ children, onClick }: any, ref) => (
  <a
    href=""
    onClick={(e) => {
      e.preventDefault();
      onClick(e);
    }}
  >
    {children}
    &#x25bc;
  </a>
));

// forwardRef again here!
// Dropdown needs access to the DOM of the Menu to measure it

const CustomMenu = React.forwardRef(
  ({ children, style, className }: any, ref) => {
    const [value, setValue] = useState('');

    return (
      <div style={style} className={className}>
        <Form.Control
          autoFocus
          className="mx-3 my-2 w-auto"
          placeholder="Type to filter..."
          onChange={(e) => {
            setValue(e.target.value);
            console.log(e.target.value);
          }}
          value={value}
        />
        <ul className="list-unstyled">
          {React.Children.toArray(children).filter(
            (child: any) =>
              !value || child.props.children.toLowerCase().startsWith(value)
          )}
        </ul>
      </div>
    );
  }
);

export default function SearchCar() {
  const [province, setProvince] = useState('กรุงเทพ');
  const [maximumCapacity, setmaximumCapacity] = useState('1');
  const today = new Date();

  const tomorrow = new Date();
  tomorrow.setDate(tomorrow.getDate() + 1);

  const [startDate1, setStartDate1] = useState(today);
  const [startDate2, setStartDate2] = useState(tomorrow);

  let [loading, setLoading] = useState(false);

  //f(x) handle click
  // async function handleSubmit(event: Event) {
  //   event.preventDefault();
  //   setLoading(true);
  //   const response = await fetch(`http://localhost:3000/vehicle/search?car=${e.target.getAttribute('modelCar')}&maximumCapacity=${maxPassanger}`);
  //   setLoading(false);
  //   if (!response.ok) {
  //     const data = await response.json();
  //     setInvalid(data.message);
  //     setShowAlert(true);
  //     return;
  //   }
  //   setShowAlert(false);
  //   authAction.mutate();
  //   router.push('/searchcar');
  // }

  const { data, status, fetchNextPage, hasNextPage } = useInfiniteQuery(
    'infiniteCharacters',
    async ({ pageParam = 1 }) =>
      await fetch(
        `https://rickandmortyapi.com/api/character/?page=${pageParam}`
      ).then((result) => result.json()),
    {
      getNextPageParam: (lastPage, pages) => {
        if (lastPage.info.next) {
          return pages.length + 1;
        }
      },
    }
  );

  // const router = useRouter();
  // const [page, setPage] = useState(1);
  // const { data } = useQuery(
  //   ['cars', page],
  //   async () =>
  //     await fetch(
  //       `http://localhost:3000/vehicle/search?province=${e.target.getAttribute('province')&name=${e.target.getAttribute('modelCar')}&maximumCapacity=${e.target.getAttribute('maximumCapacity')}&page=${value}`
  //     ).then((result) => result.json()),
  //   {
  //     keepPreviousData: true,
  //   }
  // );
  // function handlePaginationChange(e, value) {
  //   setPage(value);
  //   router.push(`paginationCSR/?page=${value}`, undefined, { shallow: true });
  // }
  // useEffect(() => {
  //   if (router.query.page) {
  //     setPage(parseInt(router.query.page));
  //   }
  // }, [router.query.page]);

  return (
    <>
      <Head>
        <title>หน้าหลัก-VEHICLE4U</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={`${styles.main}`}>
        <Row style={{ height: '100vh', width: '100%' }}>
          <Col
            sm={12}
            lg={20}
            className="d-flex justify-content-center align-items-center"
          >
            <div
              className={`${styles.form_container} justify-content-center d-flex align-items-center`}
            >
              <form style={{ width: '90%' }}>
                <h5 className={`p-2 ${styles.head} mb-1 text-center`}>
                  บริการเช่ารถ
                </h5>

                <br />
                <br />

                <Row>
                  <Col sm={12} lg={6}>
                    <Row className={`p-3 ${styles.role} mb-1 text-center`}>
                      <Col
                        sm={12}
                        lg={5}
                        style={{ borderRight: '1px solid black' }}
                      >
                        <h6>จังหวัด</h6>
                        <Dropdown>
                          <Dropdown.Toggle
                            as={CustomToggle}
                            id="dropdown-custom-components"
                          >
                            {province}
                          </Dropdown.Toggle>

                          <Dropdown.Menu as={CustomMenu}>
                            <Dropdown.Item
                              onClick={(e: any) =>
                                setProvince(e.target.getAttribute('modelCar'))
                              }
                              modelCar="กรุงเทพมหานคร"
                            >
                              กรุงเทพมหานคร
                            </Dropdown.Item>
                            <Dropdown.Item
                              onClick={(e: any) =>
                                setProvince(e.target.getAttribute('modelCar'))
                              }
                              modelCar="นนทบุรี"
                            >
                              นนทบุรี
                            </Dropdown.Item>
                            <Dropdown.Item
                              onClick={(e: any) =>
                                setProvince(e.target.getAttribute('modelCar'))
                              }
                              modelCar="ปทุมธานี"
                            >
                              ปทุมธานี
                            </Dropdown.Item>
                          </Dropdown.Menu>
                        </Dropdown>
                      </Col>
                      <Col sm={12} lg={7}>
                        <h6>สถานที่ส่งรับ-รถคืน</h6>
                        <Dropdown>
                          <Dropdown.Toggle
                            as={CustomToggle}
                            id="dropdown-custom-components"
                          >
                            {maximumCapacity}
                          </Dropdown.Toggle>

                          <Dropdown.Menu as={CustomMenu}>
                            <Dropdown.Item
                              onClick={(e: any) =>
                                setProvince(
                                  e.target.getAttribute('maximumCapacity')
                                )
                              }
                              maximumCapacity="1"
                            >
                              1
                            </Dropdown.Item>
                            <Dropdown.Item
                              onClick={(e: any) =>
                                setProvince(
                                  e.target.getAttribute('maximumCapacity')
                                )
                              }
                              maximumCapacity="2"
                            >
                              2
                            </Dropdown.Item>
                            <Dropdown.Item
                              onClick={(e: any) =>
                                setProvince(
                                  e.target.getAttribute('maximumCapacity')
                                )
                              }
                              maximumCapacity="3"
                            >
                              3
                            </Dropdown.Item>
                          </Dropdown.Menu>
                        </Dropdown>
                      </Col>
                    </Row>
                  </Col>

                  <Col sm={12} lg={4}>
                    <div className={`p-2 ${styles.role} mb-3 text-center`}>
                      <Row className={`${styles.p1}`}>
                        <Col>วัน-เวลารับรถ</Col>
                        <Col>
                          <DatePicker
                            className={`${styles.picker}`}
                            selected={startDate1}
                            onChange={(date1) => setStartDate1(date1)}
                            dateFormat="dd/MM/yyyy"
                          />
                        </Col>
                      </Row>
                      <Row className={`${styles.p2}`}>
                        <Col>วัน-เวลาส่งรถ</Col>
                        <Col>
                          <DatePicker
                            className={`${styles.picker}`}
                            selected={startDate2}
                            onChange={(date2) => setStartDate2(date2)}
                            dateFormat="dd/MM/yyyy"
                          />
                        </Col>
                      </Row>
                    </div>
                  </Col>

                  <Col sm={12} lg={2}>
                    <button type="button" className={`${styles.searchbtn}`}>
                      {loading && (
                        <>
                          <Spinner
                            className={`${styles.spinner}`}
                            animation="border"
                            variant="primary"
                          />{' '}
                        </>
                      )}
                      <BiSearchAlt size={60} />
                    </button>
                  </Col>
                </Row>
              </form>
            </div>
          </Col>
        </Row>
      </div>
    </>
  );
}
